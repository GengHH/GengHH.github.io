(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{145:function(e,s,r){e.exports=r.p+"assets/img/redis.8c02d6af.png"},146:function(e,s,r){e.exports=r.p+"assets/img/redis2.e32b8859.png"},151:function(e,s,r){"use strict";r.r(s);var a=[function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"linux下redis的安装和部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux下redis的安装和部署","aria-hidden":"true"}},[e._v("#")]),e._v(" Linux下Redis的安装和部署")]),e._v(" "),a("h3",{attrs:{id:"一、redis介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、redis介绍","aria-hidden":"true"}},[e._v("#")]),e._v(" 一、"),a("strong",[e._v("Redis介绍")])]),e._v(" "),a("p",[e._v("​\tRedis是当前比较热门的NOSQL系统之一，它是一个key-value存储系统。和Memcache类似，但很大程度补偿了Memcache的不足，它支持存储的value类型相对更多，包括string、list、set、zset和hash。这些数据类型都支持push/pop、add/remove及取交集并集和差集及更丰富的操作。在此基础上，Redis支持各种不同方式的排序。\n​\t和Memcache一样，Redis数据都是缓存在计算机内存中，不同的是，Memcache只能将数据缓存到内存中，无法自动定期写入硬盘，这就表示，一断电或重启，内存清空，数据丢失。所以Memcache的应用场景适用于缓存无需持久化的数据。而Redis不同的是它会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，实现数据的持久化。")]),e._v(" "),a("h3",{attrs:{id:"二、redis-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、redis-安装","aria-hidden":"true"}},[e._v("#")]),e._v(" 二、Redis 安装")]),e._v(" "),a("h4",{attrs:{id:"_1、首先上官网下载redis-压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、首先上官网下载redis-压缩","aria-hidden":"true"}},[e._v("#")]),e._v(" 1、首先上官网下载Redis 压缩")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("地址：http://redis.io/download 下载稳定版5.0.0即可。通过远程管理工具，将压缩包拷贝到Linux服务器中。\n")])])]),a("p",[a("em",[a("strong",[e._v("或者使用直接下载的方式来代替")])])]),e._v(" "),a("div",{staticClass:"language-$ wget http://download.redis.io/releases/redis-5.0.0.tar.gz$ tar xzf redis-5.0.0.tar.gz$ cd redis-5.0.0$ make extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[root@CentOS6 ~]#  wget http://download.redis.io/releases/redis-5.0.0.tar.gz\n")])])]),a("h4",{attrs:{id:"_2、执行解压操作（解压到指定的路径下）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、执行解压操作（解压到指定的路径下）","aria-hidden":"true"}},[e._v("#")]),e._v(" 2、执行解压操作（解压到指定的路径下）")]),e._v(" "),a("div",{staticClass:"language-linux extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[root@CentOS6 ~]# tar zxvf redis-5.0.0.tar.gz -C /usr/local/\n[root@CentOS6 ~]# cd /usr/local/\n[root@CentOS6 local]# ls\napache-tomcat-8.5.24 etc include lib64 libexec memcached nginx-1.8.0 sbin src\nbin games lib libevent maven-3.5.2 nginx redis-5.0.0 \n")])])]),a("h4",{attrs:{id:"_3、执行make对解压后的文件进行编译（在解压后的redis目录的路径下）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、执行make对解压后的文件进行编译（在解压后的redis目录的路径下）","aria-hidden":"true"}},[e._v("#")]),e._v(" 3、执行make对解压后的文件进行编译（在解压后的redis目录的路径下）")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[root@CentOS6 redis-5.0.0]# pwd\n/usr/local/redis-5.0.0\n[root@CentOS6 redis-5.0.0]# ls\n00-RELEASENOTES  COPYING  Makefile   redis.conf       runtest-sentinel  tests\nBUGS             deps     MANIFESTO  runtest          sentinel.conf     utils\nCONTRIBUTING     INSTALL  README.md  runtest-cluster  src\n[root@CentOS6 redis-5.0.0]# make\n")])])]),a("h5",{attrs:{id:"编译完成之后，可以看到解压文件redis中会有对应的src、conf等文件夹，这和windows下安装解压的文件一样，大部分安装包都会有对应的类文件、配置文件和一些命令文件。（这里的路径是将redis5-0-0-重命名为redis了）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译完成之后，可以看到解压文件redis中会有对应的src、conf等文件夹，这和windows下安装解压的文件一样，大部分安装包都会有对应的类文件、配置文件和一些命令文件。（这里的路径是将redis5-0-0-重命名为redis了）","aria-hidden":"true"}},[e._v("#")]),e._v(" 编译完成之后，可以看到解压文件redis中会有对应的src、conf等文件夹，这和windows下安装解压的文件一样，大部分安装包都会有对应的类文件、配置文件和一些命令文件。（这里的路径是将redis5.0.0 重命名为redis了）")]),e._v(" "),a("p",[a("img",{attrs:{src:r(145),alt:"编译后的redis文件夹"}})]),e._v(" "),a("h4",{attrs:{id:"_4、编译成功后，进入src文件夹，执行make-install进行redis安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、编译成功后，进入src文件夹，执行make-install进行redis安装","aria-hidden":"true"}},[e._v("#")]),e._v(" 4、编译成功后，进入src文件夹，执行make install进行Redis安装")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[root@CentOS6 redis]# make install\n")])])]),a("p",[a("img",{attrs:{src:r(146),alt:"安装后"}})]),e._v(" "),a("h3",{attrs:{id:"三、redis的部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、redis的部署","aria-hidden":"true"}},[e._v("#")]),e._v(" 三、Redis的部署")]),e._v(" "),a("p",[e._v("安装成功后，下面对Redis 进行部署")]),e._v(" "),a("p",[a("strong",[e._v("主要是方便管理redis和设置redis开机自启（可按照自己的需求进行设定）")])]),e._v(" "),a("h4",{attrs:{id:"_1、首先为了方便管理，将redis文件中的conf配置文件和常用命令移动到统一文件中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、首先为了方便管理，将redis文件中的conf配置文件和常用命令移动到统一文件中","aria-hidden":"true"}},[e._v("#")]),e._v(" 1、首先为了方便管理，将Redis文件中的conf配置文件和常用命令移动到统一文件中")]),e._v(" "),a("h5",{attrs:{id:"a-创建bin和etc文件夹"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-创建bin和etc文件夹","aria-hidden":"true"}},[e._v("#")]),e._v(" a)创建bin和etc文件夹")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[root@CentOS6 redis]# mkdir -p /usr/local/redis/bin\n[root@CentOS6 redis]# mkdir -p /usr/local/redis/ect\n")])])]),a("h5",{attrs:{id:"b-执行linux文件移动命令："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b-执行linux文件移动命令：","aria-hidden":"true"}},[e._v("#")]),e._v(" b)执行Linux文件移动命令：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[root@CentOS6 redis]# mv redis.conf etc/\n[root@CentOS6 redis]# cd src/\n[root@CentOS6 src]# mv mkreleasehdr.sh redis-benchmark redis-check-aof redis-cli redis-server /usr/local/redis/bin\n")])])]),a("h4",{attrs:{id:"_2、后台启动redis服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、后台启动redis服务","aria-hidden":"true"}},[e._v("#")]),e._v(" 2、后台启动redis服务")]),e._v(" "),a("h5",{attrs:{id:"a-切换到-usr-local-redis-etc目录，编辑redis-conf文件-将daemonize属性改为yes（表明需要在后台运行）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-切换到-usr-local-redis-etc目录，编辑redis-conf文件-将daemonize属性改为yes（表明需要在后台运行）","aria-hidden":"true"}},[e._v("#")]),e._v(" a) 切换到/usr/local/redis/etc目录，编辑redis.conf文件,将daemonize属性改为yes（表明需要在后台运行）")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[root@CentOS6 etc]# vim redis.conf\n")])])]),a("h5",{attrs:{id:"b-切换到-usr-local-redis-bin目录下执行redis-server命令，使用-usr-local-redis-etc-redis-conf-配置文件来启动redis-服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b-切换到-usr-local-redis-bin目录下执行redis-server命令，使用-usr-local-redis-etc-redis-conf-配置文件来启动redis-服务","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("strong",[e._v("b)切换到/usr/local/redis/bin目录下执行")]),e._v("Redis-server命令，使用/usr/local/redis/etc/redis.conf 配置文件来启动Redis 服务")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[root@CentOS6 redis]# cd bin/\n[root@CentOS6 bin]# ls\nmkreleasehdr.sh  redis-benchmark  redis-check-aof  redis-cli  redis-server\n[root@CentOS6 bin]# ./redis-server /usr/local/redis/etc/redis.conf\n")])])]),a("h4",{attrs:{id:"_3、服务端启动成功后，执行redis-cli启动redis-客户端，查看端口号-默认是6379。（表示已经连上redis数据库）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、服务端启动成功后，执行redis-cli启动redis-客户端，查看端口号-默认是6379。（表示已经连上redis数据库）","aria-hidden":"true"}},[e._v("#")]),e._v(" 3、服务端启动成功后，执行redis-cli启动Redis 客户端，查看端口号,默认是6379。（表示已经连上redis数据库）")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[root@CentOS6 bin]# redis-cli\n127.0.0.1:6379>\n")])])]),a("h4",{attrs:{id:"_4、编辑服务启动脚本文件（-启动脚本-redis-init-script-位于位于redis的-utils-目录下）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、编辑服务启动脚本文件（-启动脚本-redis-init-script-位于位于redis的-utils-目录下）","aria-hidden":"true"}},[e._v("#")]),e._v(" 4、编辑服务启动脚本文件（ 启动脚本 redis_init_script 位于位于Redis的 /utils/ 目录下）")]),e._v(" "),a("h5",{attrs:{id:"a-根据启动脚本，将启动脚本复制到-etc-init-d目录下，本例将启动脚本命名为redisd（通常都以d结尾表示是后台自启动服务）。用root用户进行操作："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-根据启动脚本，将启动脚本复制到-etc-init-d目录下，本例将启动脚本命名为redisd（通常都以d结尾表示是后台自启动服务）。用root用户进行操作：","aria-hidden":"true"}},[e._v("#")]),e._v(" a) 根据启动脚本，将启动脚本复制到/etc/init.d目录下，本例将启动脚本命名为redisd（通常都以d结尾表示是后台自启动服务）。用root用户进行操作：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("[root@CentOS6 utils]# cp redis_init_script /etc/init.d/redisd\n")])])]),a("h5",{attrs:{id:"b-编辑移动后的文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b-编辑移动后的文件","aria-hidden":"true"}},[e._v("#")]),e._v(" b) 编辑移动后的文件")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("vim /etc/init.d/redisd\n")])])]),a("h5",{attrs:{id:"c-脚本中内容入下："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-脚本中内容入下：","aria-hidden":"true"}},[e._v("#")]),e._v(" c) 脚本中内容入下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('#!/bin/sh\n# redis        Startup script for Redis Server\n# chkconfig: - 80 12\n# description: Redis is an open source, advanced key-value store.\n# processname: redis-server\n# config: /usr/local/redis/etc/redis.conf\n# pidfile: /var/run/redis.pid\nsource /etc/init.d/functions\nBIN="/usr/local/redis/bin"\nCONFIG="/usr/local/redis/etc/redis.conf"\nPIDFILE="/var/run/redis.pid"\n### Read configuration\n[ -r "$SYSCONFIG" ] && source "$SYSCONFIG"\nRETVAL=0\nprog="redis-server"\ndesc="Redis Server"\nstart() {\n        if [ -e $PIDFILE ];then\n             echo "$desc already running...."\n             exit 1\n        fi\n        echo -n $"Starting $desc: "\n        daemon $BIN/$prog $CONFIG\n        RETVAL=$?\n        echo\n        [ $RETVAL -eq 0 ] && touch /var/lock/subsys/$prog\n        return $RETVAL\n}\nstop() {\n        echo -n $"Stop $desc: "\n        killproc $prog\n        RETVAL=$?\n        echo\n        [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/$prog $PIDFILE\n        return $RETVAL\n}\nrestart() {\n        stop\n        start\n}\ncase "$1" in\n  start)\n        start\n        ;;\n  stop)\n        stop\n        ;;\n  restart)\n        restart\n        ;;\n  condrestart)\n        [ -e /var/lock/subsys/$prog ] && restart\n        RETVAL=$?\n        ;;\n  status)\n        status $prog\n        RETVAL=$?\n        ;;\n   *)\n        echo $"Usage: $0 {start|stop|restart|condrestart|status}"\n        RETVAL=1\nesac\nexit $RETVAL\n')])])]),a("h5",{attrs:{id:"d-设置为开机自启动，直接配置开启自启动-chkconfig-redisd-on"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#d-设置为开机自启动，直接配置开启自启动-chkconfig-redisd-on","aria-hidden":"true"}},[e._v("#")]),e._v(" d) 设置为开机自启动，直接配置开启自启动 chkconfig redisd on")]),e._v(" "),a("p",[e._v("若发现错误： service redisd does not support chkconfig，")]),e._v(" "),a("p",[e._v("解决办法，在启动脚本开头添加或修改如下注释来修改运行级别：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("#!/bin/sh\n# chkconfig:   2345 90 10\n")])])]),a("h5",{attrs:{id:"e-设置这个文件的权限-若是chmod-a-x-则a-x参数表示-all-user-can-execute-所有用户可执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#e-设置这个文件的权限-若是chmod-a-x-则a-x参数表示-all-user-can-execute-所有用户可执行","aria-hidden":"true"}},[e._v("#")]),e._v(" e) 设置这个文件的权限  (若是chmod a+x ...;  则a+x参数表示 ==> all user can execute  所有用户可执行)")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("chmod +x /etc/init.d/redisd\n")])])]),a("h5",{attrs:{id:"f-设置环境变量，并使之生效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#f-设置环境变量，并使之生效","aria-hidden":"true"}},[e._v("#")]),e._v(" f) 设置环境变量，并使之生效")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("vim /etc/profile.d/redis.sh\n\nexport REDIS_HOME=/usr/local/redis\nexport PATH=$PATH:$REDIS_HOME/bin\n\n#source /etc/profile.d/redis.sh\n")])])]),a("h5",{attrs:{id:"g-配置下面的内核参数，否则redis脚本在重启或停止redis时，将会报错，并且不能自动在停止服务前同步数据到磁盘上-etc-sysctl-conf加上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#g-配置下面的内核参数，否则redis脚本在重启或停止redis时，将会报错，并且不能自动在停止服务前同步数据到磁盘上-etc-sysctl-conf加上","aria-hidden":"true"}},[e._v("#")]),e._v(" g) 配置下面的内核参数，否则Redis脚本在重启或停止redis时，将会报错，并且不能自动在停止服务前同步数据到磁盘上/etc/sysctl.conf加上")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("#vim /etc/sysctl.conf\n\nvm.overcommit_memory = 1 \n\n#sysctl -p \n")])])]),a("h5",{attrs:{id:"后续操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后续操作","aria-hidden":"true"}},[e._v("#")]),e._v(" 后续操作")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("#查看开机自启动服务\nchkconfig --list \n#添加redis到开机自启动服务\nchkconfig --add redisd\n#添加redis到开机自启动服务\nchkconfig --del redisd\n#设置为开机自启动服务器\nchkconfig redisd on\n#打开服务\nservice redisd start\n#关闭服务\nservice redisd stop\n")])])]),a("hr"),e._v(" "),a("p",[a("strong",[e._v("附：Redis常用操作")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("./redis-server /usr..../redis.conf 启动redis服务，并指定配置文件\nredis-cli 启动redis 客户端\npkill redis-server 关闭redis服务\nredis-cli shutdown 关闭redis客户端\nnetstat -tunpl|grep 6379 查看redis 默认端口号6379占用情况\n")])])])])}],t=r(0),i=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},a,!1,null,null,null);i.options.__file="linuxCreateRedis.md";s.default=i.exports}}]);