(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{398:function(s,e,r){s.exports=r.p+"assets/img/redis.8c02d6af.png"},399:function(s,e,r){s.exports=r.p+"assets/img/redis2.e32b8859.png"},411:function(s,e,r){"use strict";r.r(e);var t=r(56),a=Object(t.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"linux-下-redis-的安装和部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux-下-redis-的安装和部署"}},[s._v("#")]),s._v(" Linux 下 Redis 的安装和部署")]),s._v(" "),t("h3",{attrs:{id:"一、redis-介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、redis-介绍"}},[s._v("#")]),s._v(" 一、"),t("strong",[s._v("Redis 介绍")])]),s._v(" "),t("p",[s._v("​ Redis 是当前比较热门的 NOSQL 系统之一，它是一个 key-value 存储系统。和 Memcache 类似，但很大程度补偿了 Memcache 的不足，它支持存储的 value 类型相对更多，包括 string、list、set、zset 和 hash。这些数据类型都支持 push/pop、add/remove 及取交集并集和差集及更丰富的操作。在此基础上，Redis 支持各种不同方式的排序。\n​ 和 Memcache 一样，Redis 数据都是缓存在计算机内存中，不同的是，Memcache 只能将数据缓存到内存中，无法自动定期写入硬盘，这就表示，一断电或重启，内存清空，数据丢失。所以 Memcache 的应用场景适用于缓存无需持久化的数据。而 Redis 不同的是它会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，实现数据的持久化。")]),s._v(" "),t("h3",{attrs:{id:"二、redis-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、redis-安装"}},[s._v("#")]),s._v(" 二、Redis 安装")]),s._v(" "),t("h4",{attrs:{id:"_1、首先上官网下载-redis-压缩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、首先上官网下载-redis-压缩"}},[s._v("#")]),s._v(" 1、首先上官网下载 Redis 压缩")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("地址：http://redis.io/download 下载稳定版5.0.0即可。通过远程管理工具，将压缩包拷贝到Linux服务器中。\n")])])]),t("p",[t("strong",[t("em",[s._v("或者使用直接下载的方式来代替")])])]),s._v(" "),t("div",{staticClass:"language-$ wget http://download.redis.io/releases/redis-5.0.0.tar.gz$ tar xzf redis-5.0.0.tar.gz$ cd redis-5.0.0$ make extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[root@CentOS6 ~]#  wget http://download.redis.io/releases/redis-5.0.0.tar.gz\n")])])]),t("h4",{attrs:{id:"_2、执行解压操作-解压到指定的路径下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、执行解压操作-解压到指定的路径下"}},[s._v("#")]),s._v(" 2、执行解压操作（解压到指定的路径下）")]),s._v(" "),t("div",{staticClass:"language-linux extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[root@CentOS6 ~]# tar zxvf redis-5.0.0.tar.gz -C /usr/local/\n[root@CentOS6 ~]# cd /usr/local/\n[root@CentOS6 local]# ls\napache-tomcat-8.5.24 etc include lib64 libexec memcached nginx-1.8.0 sbin src\nbin games lib libevent maven-3.5.2 nginx redis-5.0.0\n")])])]),t("h4",{attrs:{id:"_3、执行-make-对解压后的文件进行编译-在解压后的-redis-目录的路径下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、执行-make-对解压后的文件进行编译-在解压后的-redis-目录的路径下"}},[s._v("#")]),s._v(" 3、执行 make 对解压后的文件进行编译（在解压后的 redis 目录的路径下）")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[root@CentOS6 redis-5.0.0]# pwd\n/usr/local/redis-5.0.0\n[root@CentOS6 redis-5.0.0]# ls\n00-RELEASENOTES  COPYING  Makefile   redis.conf       runtest-sentinel  tests\nBUGS             deps     MANIFESTO  runtest          sentinel.conf     utils\nCONTRIBUTING     INSTALL  README.md  runtest-cluster  src\n[root@CentOS6 redis-5.0.0]# make\n")])])]),t("h5",{attrs:{id:"编译完成之后-可以看到解压文件-redis-中会有对应的-src、conf-等文件夹-这和-windows-下安装解压的文件一样-大部分安装包都会有对应的类文件、配置文件和一些命令文件。-这里的路径是将-redis5-0-0-重命名为-redis-了"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译完成之后-可以看到解压文件-redis-中会有对应的-src、conf-等文件夹-这和-windows-下安装解压的文件一样-大部分安装包都会有对应的类文件、配置文件和一些命令文件。-这里的路径是将-redis5-0-0-重命名为-redis-了"}},[s._v("#")]),s._v(" 编译完成之后，可以看到解压文件 redis 中会有对应的 src、conf 等文件夹，这和 windows 下安装解压的文件一样，大部分安装包都会有对应的类文件、配置文件和一些命令文件。（这里的路径是将 redis5.0.0 重命名为 redis 了）")]),s._v(" "),t("p",[t("img",{attrs:{src:r(398),alt:"编译后的redis文件夹"}})]),s._v(" "),t("h4",{attrs:{id:"_4、编译成功后-进入-src-文件夹-执行-make-install-进行-redis-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、编译成功后-进入-src-文件夹-执行-make-install-进行-redis-安装"}},[s._v("#")]),s._v(" 4、编译成功后，进入 src 文件夹，执行 make install 进行 Redis 安装")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[root@CentOS6 redis]# make install\n")])])]),t("p",[t("img",{attrs:{src:r(399),alt:"安装后"}})]),s._v(" "),t("h3",{attrs:{id:"三、redis-的部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、redis-的部署"}},[s._v("#")]),s._v(" 三、Redis 的部署")]),s._v(" "),t("p",[s._v("安装成功后，下面对 Redis 进行部署")]),s._v(" "),t("p",[t("strong",[s._v("主要是方便管理 redis 和设置 redis 开机自启（可按照自己的需求进行设定）")])]),s._v(" "),t("h4",{attrs:{id:"_1、首先为了方便管理-将-redis-文件中的-conf-配置文件和常用命令移动到统一文件中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、首先为了方便管理-将-redis-文件中的-conf-配置文件和常用命令移动到统一文件中"}},[s._v("#")]),s._v(" 1、首先为了方便管理，将 Redis 文件中的 conf 配置文件和常用命令移动到统一文件中")]),s._v(" "),t("h5",{attrs:{id:"a-创建-bin-和-etc-文件夹"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-创建-bin-和-etc-文件夹"}},[s._v("#")]),s._v(" a)创建 bin 和 etc 文件夹")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[root@CentOS6 redis]# mkdir -p /usr/local/redis/bin\n[root@CentOS6 redis]# mkdir -p /usr/local/redis/ect\n")])])]),t("h5",{attrs:{id:"b-执行-linux-文件移动命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#b-执行-linux-文件移动命令"}},[s._v("#")]),s._v(" b)执行 Linux 文件移动命令：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[root@CentOS6 redis]# mv redis.conf etc/\n[root@CentOS6 redis]# cd src/\n[root@CentOS6 src]# mv mkreleasehdr.sh redis-benchmark redis-check-aof redis-cli redis-server /usr/local/redis/bin\n")])])]),t("h4",{attrs:{id:"_2、后台启动-redis-服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、后台启动-redis-服务"}},[s._v("#")]),s._v(" 2、后台启动 redis 服务")]),s._v(" "),t("h5",{attrs:{id:"a-切换到-usr-local-redis-etc-目录-编辑-redis-conf-文件-将-daemonize-属性改为-yes-表明需要在后台运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-切换到-usr-local-redis-etc-目录-编辑-redis-conf-文件-将-daemonize-属性改为-yes-表明需要在后台运行"}},[s._v("#")]),s._v(" a) 切换到/usr/local/redis/etc 目录，编辑 redis.conf 文件,将 daemonize 属性改为 yes（表明需要在后台运行）")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[root@CentOS6 etc]# vim redis.conf\n")])])]),t("h5",{attrs:{id:"b-切换到-usr-local-redis-bin-目录下执行redis-server-命令-使用-usr-local-redis-etc-redis-conf-配置文件来启动-redis-服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#b-切换到-usr-local-redis-bin-目录下执行redis-server-命令-使用-usr-local-redis-etc-redis-conf-配置文件来启动-redis-服务"}},[s._v("#")]),s._v(" "),t("strong",[s._v("b)切换到/usr/local/redis/bin 目录下执行")]),s._v("Redis-server 命令，使用/usr/local/redis/etc/redis.conf 配置文件来启动 Redis 服务")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[root@CentOS6 redis]# cd bin/\n[root@CentOS6 bin]# ls\nmkreleasehdr.sh  redis-benchmark  redis-check-aof  redis-cli  redis-server\n[root@CentOS6 bin]# ./redis-server /usr/local/redis/etc/redis.conf\n")])])]),t("h4",{attrs:{id:"_3、服务端启动成功后-执行-redis-cli-启动-redis-客户端-查看端口号-默认是-6379。-表示已经连上-redis-数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、服务端启动成功后-执行-redis-cli-启动-redis-客户端-查看端口号-默认是-6379。-表示已经连上-redis-数据库"}},[s._v("#")]),s._v(" 3、服务端启动成功后，执行 redis-cli 启动 Redis 客户端，查看端口号,默认是 6379。（表示已经连上 redis 数据库）")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[root@CentOS6 bin]# redis-cli\n127.0.0.1:6379>\n")])])]),t("h4",{attrs:{id:"_4、编辑服务启动脚本文件-启动脚本-redis-init-script-位于位于-redis-的-utils-目录下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、编辑服务启动脚本文件-启动脚本-redis-init-script-位于位于-redis-的-utils-目录下"}},[s._v("#")]),s._v(" 4、编辑服务启动脚本文件（ 启动脚本 redis_init_script 位于位于 Redis 的 /utils/ 目录下）")]),s._v(" "),t("h5",{attrs:{id:"a-根据启动脚本-将启动脚本复制到-etc-init-d-目录下-本例将启动脚本命名为-redisd-通常都以-d-结尾表示是后台自启动服务-。用-root-用户进行操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-根据启动脚本-将启动脚本复制到-etc-init-d-目录下-本例将启动脚本命名为-redisd-通常都以-d-结尾表示是后台自启动服务-。用-root-用户进行操作"}},[s._v("#")]),s._v(" a) 根据启动脚本，将启动脚本复制到/etc/init.d 目录下，本例将启动脚本命名为 redisd（通常都以 d 结尾表示是后台自启动服务）。用 root 用户进行操作：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[root@CentOS6 utils]# cp redis_init_script /etc/init.d/redisd\n")])])]),t("h5",{attrs:{id:"b-编辑移动后的文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#b-编辑移动后的文件"}},[s._v("#")]),s._v(" b) 编辑移动后的文件")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("vim /etc/init.d/redisd\n")])])]),t("h5",{attrs:{id:"c-脚本中内容入下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-脚本中内容入下"}},[s._v("#")]),s._v(" c) 脚本中内容入下：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('#!/bin/sh\n# redis        Startup script for Redis Server\n# chkconfig: - 80 12\n# description: Redis is an open source, advanced key-value store.\n# processname: redis-server\n# config: /usr/local/redis/etc/redis.conf\n# pidfile: /var/run/redis.pid\nsource /etc/init.d/functions\nBIN="/usr/local/redis/bin"\nCONFIG="/usr/local/redis/etc/redis.conf"\nPIDFILE="/var/run/redis.pid"\n### Read configuration\n[ -r "$SYSCONFIG" ] && source "$SYSCONFIG"\nRETVAL=0\nprog="redis-server"\ndesc="Redis Server"\nstart() {\n        if [ -e $PIDFILE ];then\n             echo "$desc already running...."\n             exit 1\n        fi\n        echo -n $"Starting $desc: "\n        daemon $BIN/$prog $CONFIG\n        RETVAL=$?\n        echo\n        [ $RETVAL -eq 0 ] && touch /var/lock/subsys/$prog\n        return $RETVAL\n}\nstop() {\n        echo -n $"Stop $desc: "\n        killproc $prog\n        RETVAL=$?\n        echo\n        [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/$prog $PIDFILE\n        return $RETVAL\n}\nrestart() {\n        stop\n        start\n}\ncase "$1" in\n  start)\n        start\n        ;;\n  stop)\n        stop\n        ;;\n  restart)\n        restart\n        ;;\n  condrestart)\n        [ -e /var/lock/subsys/$prog ] && restart\n        RETVAL=$?\n        ;;\n  status)\n        status $prog\n        RETVAL=$?\n        ;;\n   *)\n        echo $"Usage: $0 {start|stop|restart|condrestart|status}"\n        RETVAL=1\nesac\nexit $RETVAL\n')])])]),t("h5",{attrs:{id:"d-设置为开机自启动-直接配置开启自启动-chkconfig-redisd-on"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#d-设置为开机自启动-直接配置开启自启动-chkconfig-redisd-on"}},[s._v("#")]),s._v(" d) 设置为开机自启动，直接配置开启自启动 chkconfig redisd on")]),s._v(" "),t("p",[s._v("若发现错误： service redisd does not support chkconfig，")]),s._v(" "),t("p",[s._v("解决办法，在启动脚本开头添加或修改如下注释来修改运行级别：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("#!/bin/sh\n# chkconfig:   2345 90 10\n")])])]),t("h5",{attrs:{id:"e-设置这个文件的权限-若是-chmod-a-x-则-a-x-参数表示-all-user-can-execute-所有用户可执行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#e-设置这个文件的权限-若是-chmod-a-x-则-a-x-参数表示-all-user-can-execute-所有用户可执行"}},[s._v("#")]),s._v(" e) 设置这个文件的权限 (若是 chmod a+x ...; 则 a+x 参数表示 ==> all user can execute 所有用户可执行)")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("chmod +x /etc/init.d/redisd\n")])])]),t("h5",{attrs:{id:"f-设置环境变量-并使之生效"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#f-设置环境变量-并使之生效"}},[s._v("#")]),s._v(" f) 设置环境变量，并使之生效")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("vim /etc/profile.d/redis.sh\n\nexport REDIS_HOME=/usr/local/redis\nexport PATH=$PATH:$REDIS_HOME/bin\n\n#source /etc/profile.d/redis.sh\n")])])]),t("h5",{attrs:{id:"g-配置下面的内核参数-否则-redis-脚本在重启或停止-redis-时-将会报错-并且不能自动在停止服务前同步数据到磁盘上-etc-sysctl-conf-加上"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#g-配置下面的内核参数-否则-redis-脚本在重启或停止-redis-时-将会报错-并且不能自动在停止服务前同步数据到磁盘上-etc-sysctl-conf-加上"}},[s._v("#")]),s._v(" g) 配置下面的内核参数，否则 Redis 脚本在重启或停止 redis 时，将会报错，并且不能自动在停止服务前同步数据到磁盘上/etc/sysctl.conf 加上")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("#vim /etc/sysctl.conf\n\nvm.overcommit_memory = 1\n\n#sysctl -p\n")])])]),t("h5",{attrs:{id:"后续操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后续操作"}},[s._v("#")]),s._v(" 后续操作")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("#查看开机自启动服务\nchkconfig --list\n#添加redis到开机自启动服务\nchkconfig --add redisd\n#添加redis到开机自启动服务\nchkconfig --del redisd\n#设置为开机自启动服务器\nchkconfig redisd on\n#打开服务\nservice redisd start\n#关闭服务\nservice redisd stop\n")])])]),t("hr"),s._v(" "),t("p",[t("strong",[s._v("附：Redis 常用操作")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("./redis-server /usr..../redis.conf 启动redis服务，并指定配置文件\nredis-cli 启动redis 客户端\npkill redis-server 关闭redis服务\nredis-cli shutdown 关闭redis客户端\nnetstat -tunpl|grep 6379 查看redis 默认端口号6379占用情况\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);